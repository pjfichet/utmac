.\"""""""""""""""""""""""""""""""""""""
.\" idx: Create an index of words.
.\"
.nr idx-trap 0 1
.de idx:trap
.	\" Place an output line trap to get the real page number
.	\" $1 key
.	\" $2 word to index
.	de idx:\\n+[idx-trap]
.		\" Add the trap number to delete the trap later
.		idx:record \\n[idx-trap] \\$*
\\..
.	var:print \\P[idx:\\n[idx-trap]]\\c
..
.ds idx-list
.de idx:record
.	\" Delete previous trap,
.	\" and record an index entry.
.	\" $1 trap number
.	\" $2 keyword
.	\" $3 word
.	lnr idx-previoustrap (\\$1 -1)
.	\" Delete the previous if it exists
.	\" (Traps printed in notes may appear later and are skipped.)
.	if d idx\\n[idx-previoustrap] .rm idx:\\n[idx-previoustrap]
.	lds idx-key \\$2
.	shift 2
.	as idx-list @@@\\*[idx-key]> \\$*:: \\n%
..
.de XI
.	\" Write the index list to a file
.	\" format it, and source it.
.	br
.	ds idx-file /tmp/\\*[data-file].idx.tr
.	\" inconv fixes a bug in heirloom troff
.	sy echo "\\*[idx-list]" | sed -e "s/@@@/\\\\n/g" | iconv -f latin1 -t utf8 > \\*[idx-file]
.	sy idx -d \\*[idx-file] > \\*[idx-file].b
.	so \\*[idx-file].b
.	sy rm \\*[idx-file] \\*[idx-file].b
..
.\"""""""""""""""""""""""""""""""""""""
.\" Format the output of idx
.\" The output of idx is as follow:
.\" .K<			Start an index of type K
.\" .ds P< 		A list of pages
.\" .K> word	The index entry appearing on those pages
.
.de idx:par
.	\" paragraph macro for each index line
.	br
.	par:init
.	in 3v
.	ti 0
..
.de idx:make
.	\" Build high level macros
.	de \\$1<
.		\" Index header (output of idx)
.		H3 \\$2
\\..
.	de \\$1>
.		\" Index entry (output of idx)
.		idx:par
.		var:print \\\\$*: \\\\*(<P.
\\..
.	de K\\$1
.		\" Index a word (user macro)
.		idx:trap \\$1 \\\\$*
\\..
..
.\"""""""""""""""""""""""""""""""""""""
.\" Define index macros
.
.\" acronyms
.idx:make A \\\\*[lang-Idxa]
.\" names
.idx:make N \\\\*[lang-Idxn]
.\" Objects, things
.idx:make O \\\\*[lang-Idxo]
.\" titles, books
.idx:make T \\\\*[lang-Idxt]
.\" words
.idx:make W \\\\*[lang-Idxw]
