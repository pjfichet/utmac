.\" us: Follow old s macro layout, for documentation.
.ig
Copyright (C) 2012-2018 Pierre Jean Fichet
<pierrejean dot fichet at posteo dot net>

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted, provided that the above
copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
..
.do xflag 3
.\""""""""""""""""""""""""""""""""""""""
.\" default variables
.nr tmac-us 1
.nr page-head 6
.nr page-foot 58 \" 44
.nr page-box \n[page-foot]+2
.nr text-offset 3.5c
.nr text-offset-e 3.5c
.nr text-length 14c
.nr text-hyphen 14
.nr text-font 10p
.nr text-line 13p \" change page-foot if you change this!
.nr addr-offset 14c
.nr addr-length 3.5c
.nr addr-line 10
.nr note-offset \n[text-offset]u
.nr note-offset-e \n[text-offset-e]u
.nr note-length 6.5c
.nr note-blank 1c
.nr note-hyphen \n[text-hyphen]
.nr note-font 10p
.nr note-line 13p
.nr box-offset \n[text-offset]u\"+\n[text-length]u
.nr box-length \n[text-length]u\"4c
.nr var-orphan \n[page-head]+1
.nr var-widow \n[page-foot]-2
.nr var-blank \n[page-foot]-1
.hypp 0 0 200
.papersize a4
.mediasize a4
.padj
.\""""""""""""""""""""""""""""""""""""""
.\" Document
.de doc:start
.	\" start document
.	par:doc
.	pdf:data
.	em doc:end
.	\" begin first page
.	wh 0 page:head
.	page:head
..
.de doc:end
.	\" end document
.	br
.	pdf:data
..
.\""""""""""""""""""""""""""""""""""""""
.\" Page
.de page:head
.	\" put a vacuum header
.	wh \\n[page-foot]v page:foot
.	sp |\\n[page-head]v
.	ns
.	\" place a trap if note are diverted to this page
.	note:head
.	po \\n[text-offset]u
.	if \\n(RV=1 .if e .po \\n[text-offset-e]u
..
.de page:foot
.	\" print footer
.	ch page:foot
.	var:todo code:foot
.	ev ev-foot
.	br
.	\"var:print \s+(80\D'l \\n[box-length]u'\s-(80
.	if \\n%=1 .if d data:write .data:write
.	par:init
.	br
.	note:print
.	if \\n%>1 .page:box
.	bp
.	ns
.	ev
.	var:todo code:init
..
.ds page-title-tmp
.de page:boxeven
.	ie !"\\*[page-title-tmp]"" \{\
.		tl "\\*C\\*[page-num]\\*C""\\*C\\*[page-title-tmp]\\*C"
.		rm page-title-tmp
.	\}
.	el .tl "\\*C\\*[page-num]\\*C""\\*C\\*[page-title]\\*C"
..
.de page:boxodd
.	ie !"\\*[page-title-tmp]"" \{\
.		tl "\\*C\\*[page-title-tmp]\\*C""\\*C\\*[page-num]\\*C"
.		rm page-title-tmp
.	\}
.	el .tl "\\*C\\*[page-title]\\*C""\\*C\\*[page-num]\\*C"
..
.de page:box
.	par:init
.	in 0
.	sp |\\n[page-box]v
.	po \\n[box-offset]u
.	lt \\n[box-length]u
.	ie \\n(RP .ds page-num \\n%
.	el .ds page-num
.	ie \\n(RV=1 \{\
.		ie e .page:boxeven
.		el .page:boxodd
.	\}
.	el .page:boxodd
.	\"var:print \s+(80\D'l \\n[box-length]u'\s-(80
..
.de page:num
.	\" get real page number in padj mode
.	nr page-num \\n%
..
.\""""""""""""""""""""""""""""""""""""""
.\" Paragraphs
.de par:doc
.	\" start paragraph
.	ad b
.	fi
.	hy \\n[text-hyphen]
.	ll \\n[text-length]u
.	lt \\n[text-length]u
.	vs \\n[text-line]u
.	ps \\n[text-font]u
'	in 0 \" Avoid break!
.	ce 0
.	po \\n[text-offset]u
.	\"ti 1v
.	font:text
.	typo:text
..
.de par:init
.	var:start
.	par:doc
..
.de par:start
.	br
.	par:init
.	var:layout
..
.de PB
.	par:start
.	in 3v
.	ti 0
.	sp 1v
..
.de PP
.	par:start
.	sp 1v
..
.de PQ
.	par:start
.	in 3v
.	sp 1v
..
.de PI
.	par:start
.	in 3v
.	ti 2v
.	ta 3v
.	ie \\n(.$ \{\
.		nr bullet-length \w'\\$*'
.		ti 0
.		ie \\n[bullet-length]u>=3v \{\
.			var:print \\$*
.			br
.		\}
.		el .var:print \\$*\h"3v-\\n[bullet-length]u"\c
.	\}
.	el .var:print \(en\h"1v-\w'\(en'u"\c
..
.de PL
.	par:start
.	ad l
.	sp 1v
..
.de PR
.	par:start
.	ad r
.	sp 1v
..
.de PC
.	PA
.	ad c
..
.de PX
.	par:start
.	nf
.	ti 0
.	in 3v
.	sp 1v
..
.de PA
.	par:start
.	ll \\n[text-length]u-3v
.	ti 0
.	in 3v
.	sp 1v
..
.de PF
.	PA
.	nf
.	ce 100
..
.de PT
.	par:start
.	sp |\\n[addr-line]v
.	po \\n[addr-offset]u
.	ll \\n[addr-length]u
.	nf
..
.als PS PP
.char \[repeat-char] \h'0.5m'.\h'0.5m'
.de par:toc
.	\" table of content paragraph
.	\" Be carefull: don't reset paragraph
.	\" to use it in footnotes
.	\"par:start
.	if \\n(.$ .in \\$1v
.	if t .lc \[repeat-char]
.	ta (\\n(.lu-\\n(.iu-\w'000'u) (\\n(.lu-\\n(.iu)R
..
.\""""""""""""""""""""""""""""""""""""""
.\" Headings
.de head:orn
.	\" Put ornament
.	br
.	par:init
.	nr orn-limit \\n[page-foot]-5
.	nr orn-line \\n(nl/\\n[text-line]
.	if \\n[orn-line]<\\n[orn-limit] \{\
.		if \\n[orn-line]>\\n[page-head] \{\
.			nr orn-tmp \\n[orn-limit]-\\n[orn-line]/3
.			ie \\n[orn-tmp]>2 .nr orn-space \\n[orn-tmp]
.			el .nr orn-space 2
.			sp \\n[orn-space]v
.			ce
.			var:print \\*[font-orn]
.		\}
.	\}
.	rr orn-limit
.	rr orn-line
.	rr orn-tmp
..
.nr head-1 0 1
.nr head-2 0 1
.nr head-3 0 1
.nr head-4 0 1
.de head:print
.	nr head-toprint \\$1
.	shift
.	\" Define anchor string
.	ds head-level \\n[head-1].\\n[head-2].\\n[head-3].\\n[head-4]
.	\" Separate last letter of the heading to decorate it
.	ds head-beg \\$*
.	ds head-end \\$*
.	chop head-beg
.	substring head-end -1 -1
.	ds head-string \\*[head-beg]\\*F\\*[head-end]\\*F
.	nh
.	in 0
.	\" Print a line trap to get page-num
.	var:print \\P[page:num]\\c
.	\" Print pdf bookmark
.	pdf:bookmark \\n[head-toprint] "\\$*" \\c
.	\" Print pdf anchor
.	pdf:anchor \\*[head-level] \\c
.	\" Print heading linking to toc
.	pdf:link TOC "\\*[head-string]"
.	br
.	font:endhead
.	hy \\n[text-hyphen]
.	nr var-layout 0
.	\" After the line break, page-num is set, so we can record
.	toc:record \\n[head-toprint] "\\$*"
.	sum:record \\n[head-toprint] \\*[head-level] \\n[page-num] "\\$*"
..
.de H1
.	nr head-1 +1
.	nr head-2 0
.	nr head-3 0
.	nr head-4 0
.	bp
.	rs
.	par:init
.	sp 5v
.	ps 25p
.	ad c
.	vs \\n[text-line]u*2u
.	font:head
.	head:print 1 \\$*
.	br
.	par:init
.	sp 5v
.	ns
..
.de H2
.	nr head-2 +1
.	nr head-3 0
.	nr head-4 0
.	\"if \\n[head-2]>0 .head:orn
.	bp
.	rs
.	par:init
.	sp 3v
.	ps 20p
.	ad c
.	vs \\n[text-line]u*2u
.	font:head
.	head:print 2 \\$*
.	nr * 0 1 \" reset note number
.	par:init
.	sp 2v
.	ns
..
.de H3
.	nr head-3 +1
.	nr head-4 0
.	par:init
.	br
.	ne 5v
.	sp 1.5v
.	\"ps 12
.	ps +2
.	ad l
.	font:head
.	head:print 3 \\$*
.	sp .5v
.	ns
..
.de H4
.	nr head-4 +1
.	par:init
.	br
.	ne 3v
.	sp 1v
.	ad l
.	font:head
.	head:print 4 \\$*
.	ns
..
.de H0
.	ds page-title-tmp \\$*
..
.ds page-title
.de H*
.	ds page-title \\$*
..
.\""""""""""""""""""""""""""""""""""""""
.\"	Table of content
.de toc:record
.	\" record for TOC.
.	\" $1 indent $2 title string
.	ev toc
.	br
.	par:init \" par:toc don't reset paragraph
.	par:toc \\$1
.	shift
.	da toc:print
.		pdf:link \\*[head-level] "\\$*" "\Ea\Et\\n[page-num]"
.		in 0
.		br
.	di
.	ev
..
.de XT
.	\" print table of contents
.	H3 \\*[lang-Toc]
.	\"H* \\*[lang-Toc]
.	\"H0
.	pdf:anchor TOC \\c
.	br
.	rs
.	sp -1v
.	ev toc
.	par:init \" par:toc don't reset paragraph
.	par:toc 0
.	nf
.	toc:print
.	br
.	fi
.	ev
..
.\"""""""""""""""""""""""""""""""""""""
.\"	Summary (u-sum.tmac)
.\"
.de sum:start
.	nr note-in 1
.	\"sp 1v \" test
.	ev ev-sum
.	br
.	note:init
.	ll \\n[note-length]u-3v
.	di sum:trap
..
.de sum:line
.	\" Write a summary line
.	\" $1: indent
.	\" $2: internal link to the heading
.	\" $3: page of the heading
.	\" $4+: heading text
.	par:toc \\$1
.	ds sum-anchor \\$2
.	ds sum-page \\$3
.	shift 3
.	pdf:link \\*[sum-anchor] "\\$*" "\Ea\Et\\*[sum-page]\\c"
..
.de sum:stop
.	\" Divide the notes in two columns
.	\" by placing a trap at the middle of the length
.	br
.	di
.	\" number of lines in last diversion:
.	nr sum-lines (\\n(dnu-1v)/\\n[note-line]u
.	\" size of each column
.	nr sum-divide \\n[sum-lines]/2
.	\" rest of division:
.	nr sum-modulo \\n[sum-lines]%2
.	\" if modulo, add one line to the size of the column:
.	ie \\n[sum-modulo]>0 .nr sum-divide +1
.	\" actually place the trap
.	wh \\n(nlu+\\n[sum-divide]v sum:return
.	\" remember where is the top of the column
.	mk sum-beg
.	\" Write the notes
.	po \\n[note-offset]u+3v
.	if \\n(RV .if e .po \\n[note-offset-e]u+3v
.	nf
.	sum:trap
.	\" flow pass throught sum:return
.	br
.	ev
.	if r sum-end .rt \\n[sum-end]u
.	po \\n[text-offset]u
.	if \\n(RV=1 .if e .po \\n[text-offset-e]u
.	PP
.	font:text
..
.de sum:return
.	mk sum-end
.	rt \\n[sum-beg]u
.	po +\\n[note-length]u-3v+\\n[note-blank]u
.	ch sum:return
..
.\""""""""""""""""""""""""""""""""""""""
.\" Notes in padj mode
.nr * 0 1
.ds * \|\\*U\\n+*\\*U
.nr note-in 0
.nr note-size 2 \" size of diversion
.\" deal with output line traps:
.nr note-olt 0 1 \" output line trap number
.de note:init
.	ad b
.	fi
.	hy \\n[note-hyphen]
.	ll \\n[note-length]u
.	lt \\n[note-length]u
.	vs \\n[note-line]u
.	ps \\n[note-font]u
'	in 0 \" Avoid break!
.	if t .lc \[repeat-char]
.	ta (\\n[note-length]u-\w'000'u) (\\n[note-length]u)R
.	\"ta (\\n(.lu-\\n(.iu-\w'000'u) (\\n(.lu-\\n(.iu)R
.	font:note
.	typo:note
..
.de NS
.	nr note-in 1
.	\" start a note
.	\" Do not append text of note to note:div
.	\" before that line is printed.
.	nr i \\n[note-olt] \" erase trap later
.	\" Call numbered macro in line trap:
.	var:print \&\\P[note:olt-\\n+[note-olt]]\&\c
.	\" Define macro called by line trap
.	de note:olt-\\n[note-olt]
.		rm note:olt-\\ni \" erase previous trap
.		ev ev-note
.		note:init
.		\" Append text of note to note:div
.		da note:div
.			br
.			nf
.			note:plt-\\n[note-olt]
.			fi
.			br
.		di
.		ev
.		font:text
.		note:mvtrap
\\..
.	rr i
.	\" Divert text of note to line trap macro
.	ev ev-note
.	br
.	note:init
.	di note:plt-\\n[note-olt]
.		if \\n(.$=0 .var:print \\*B\\*U\\n*\\*U\\*B
..
.de NE
.	br
.	di
.	ev
.	nr note-div +\\n(dn
.	font:text
.	nr note-in 0
..
.de NT
.	NS no
..
.de NB
.	NS no
..
.de note:mvtrap
.	\" place or move a trap for notes
.	\" number of lines in last diversion:
.	nr note-lines \\n(dnu/\\n[note-line]u
.	\" size of all the notes:
.	nr note-size +\\n[note-lines]
.	\" size of each column
.	nr note-divide \\n[note-size]/2
.	\" rest of division:
.	nr note-modulo \\n[note-size]%2
.	\" if modulo, add one line to size of column:
.	ie \\n[note-modulo]>0 .nr note-divide +1
.	\" line of page in which the actual note appears:
.	nr note-olt-line \\n(nlu/\\n[text-line]u
.	\" line of page in which footer + note should begin:
.	nr note-place \\n[page-foot]-\\n[note-divide]
.	\" if enougth place, print all notes
.	ie \\n[note-olt-line]<\\n[note-place] \{\
.		ch page:foot \\n[note-place]v
.	\}
.	\" else, print diversion in next line
.	el .ch page:foot \\n[note-olt-line]+1v
..
.nr note-div 0
.de note:print
.	if \\n[note-div] \{\
.		ti 0
.		br
.		po \\n[note-offset]u
.		if \\n(RV .if e .po \\n[note-offset-e]u
.		wh \\n[page-foot]v note:print2
.		var:print \D'l \\n[text-length]u/3u'
.		br
.		mk note-top
.		ev ev-note
.		nf
.		note:div
.		rm note:div
.		nr note-size 2
.		nr note-div 0
.		if r note-trap .note:endtrap
.		br
.		ev
.		fi
.	\}
..
.de note:print2
.	\" print second column
.	rt \\n[note-top]u
.	po +\\n[note-length]u+\\n[note-blank]u
.	if \\n[note-olt-line]>\\n[note-place] \{\
.		wh \\n[page-foot]v note:trap
.	\}
.	ch note:print2
..
.de note:trap
.	\" divert to next page
.	ch note:trap
.	nr note-trap 1
.	di note:pre
..
.de note:endtrap
.	\" stop diversion to next page
.	br
.	di
.	nr note-div \\n(dn
.	de note:div
.		note:pre
\\..
..
.de note:head
.	\" add diversion from previous page
.	if r note-trap .note:mvtrap
.	rr note-trap
..
.\""""""""""""""""""""""""""""""""""""""
.\" Load other macros and start
.so \V[TROFFMACS]/u-var
.if !r tmac-u-fonts .so \V[TROFFMACS]/u-biolib
.doc:start
